name: Release on GitHub
on:
  workflow_call:
    inputs:
      inputArtifactName:
        required: true
        type: string
      monoPack:
        required: false
        type: boolean
      version:
        required: true
        type: string
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Abort if release already exists
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: gh release view ${{ inputs.version }} |& grep "release not found"
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.inputArtifactName }}
          path: release
      - name: Prepare release files
        run: |
          shopt -s extglob
          cd release
          if ${{ inputs.monoPack }}; then
            mkdir release
            mv !(release) release
            mv release ${{ github.event.repository.name }}
          fi
          for filename in *; do
            basename=${filename%.*}
            if [[ -f "$filename" ]]; then
              extension=${filename##*.}
              if [[ $extension == exe ]]; then
                platform=-windows-amd64
              elif [[ $basename == $extension ]]; then
                platform=-linux-amd64
              fi
              mkdir release
              mv "$filename" release
              mv release ${{ github.event.repository.name }}
              filename=${{ github.event.repository.name }}
            fi
            zip -rm "$basename-${{ inputs.version }}$platform.zip" "$filename"
          done
      - name: Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          tag_name: ${{ inputs.version }}
          body: Release for ${{ inputs.version }}
          files: release/*
